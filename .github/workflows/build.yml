name: Build Ruby

on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    name: ${{ matrix.os }} (${{ matrix.arch }}-bit)
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-20.04
        - macos-10.15
        - windows-2019
        arch:
        - 64
        - 32
        exclude:
          - os: macos-10.15
            arch: 32
          - os: macos-10.15
          - os: ubuntu-20.04
          - os: windows-2019
            arch: 32
    defaults:
      run:
        shell: bash
    env:
      RUBY_TAG: v2_7_2
    steps:
    - name: Set up environment
      run: |
        echo "RUBY_PREFIX=$HOME/ruby-install" >> $GITHUB_ENV
    - name: Clone ruby-build
      uses: actions/checkout@v2
    - name: Clone Ruby
      run: |
        git clone --depth 1 git://github.com/ruby/ruby -b "$RUBY_TAG"
        echo "RUBY_SOURCE=$(pwd)/ruby" >> $GITHUB_ENV
        echo "RUBY_ARCH=${{ matrix.arch }}" >> $GITHUB_ENV
    - name: Set up environment (Windows-specific)
      if: ${{ startswith(matrix.os, 'windows') }}
      run: scripts/windows_setup_vcvars.bat
    - name: Install dependencies
      run: ./scripts/install_deps.bash
    - name: Configure
      id: configure
      run: ./scripts/configure.bash
    - name: Upload config.log
      if: ${{ failure() && steps.configure.outcome == 'failure' }}
      uses: actions/upload-artifact@v2
      with:
        name: config-${{ matrix.os }}-${{ matrix.arch }}.log
        path: ruby/config.log
    - name: Build
      run: ./scripts/build.bash
    - name: Test
      run: ./scripts/test.bash
    - name: Package
      id: package
      run: |
        mkdir ruby-package
        ./scripts/package.bash "$(pwd)/ruby-package"
        echo "::set-output name=dll_path::$(ls ruby-package/*)"
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: libruby-${{ matrix.os }}-${{ matrix.arch }}
        path: ${{ steps.package.outputs.dll_path }}
